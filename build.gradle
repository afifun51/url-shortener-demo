plugins {
  id 'java'
  id 'org.springframework.boot' version '3.4.2'
  id 'io.spring.dependency-management' version '1.1.7'
  id 'org.springdoc.openapi-gradle-plugin' version "1.9.0"
  id "jacoco"
  id "org.sonarqube" version "6.0.1.5171"
}

group = 'org.fasilkom'
version = '0.0.1-SNAPSHOT'

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(17)
  }
}

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
  mavenCentral()
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter'
  implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.4'

  compileOnly 'org.projectlombok:lombok'
  developmentOnly 'org.springframework.boot:spring-boot-devtools'
  annotationProcessor 'org.projectlombok:lombok'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
  useJUnitPlatform()
}

jacocoTestReport {
  reports {
    xml.required = true
  }
}

plugins.withType(JacocoPlugin) {
  tasks["test"].finalizedBy 'jacocoTestReport'
}

sonar {
  properties {
    property("sonar.projectKey", "url-shortener-demo")
    property("sonar.organization", "afifun51")
    property("sonar.login", System.getenv("SONAR_TOKEN"))
    property("sonar.host.url", "https://sonarcloud.io")
    property("sonar.coverage.jacoco.xmlReportPaths", "${project.getProjectDir()}/build/reports/jacoco/test/jacocoTestReport.xml")
  }
}
